name: CI Develop

on:
  pull_request:
    branches:
      - develop
    paths: 
      - 'lib/**'
      - 'test/**'

jobs:
  analyze_code_and_test:
    name: Analyze code and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Prepare PR notification message
        id: pr_notification
        run: |
          # Define the mapping of GitHub usernames to Slack IDs as a JSON string
          MENTIONS_JSON='${{ env.SLACK_MENTIONS }}'
          # Get the GitHub login of the PR author
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          # Extract the Slack ID of the PR author from the mapping
          PR_AUTHOR_SLACK_ID=$(echo $MENTIONS_JSON | jq -r ".[\"$PR_AUTHOR\"]")
          # Initialize an empty string for the mentions excluding the PR author
          OTHER_MENTIONS_SLACK_IDS=""
          
          # Loop through each GitHub username in the mapping
          for GITHUB_ID in $(echo $MENTIONS_JSON | jq -r 'keys[]'); do
            # Skip the PR author
            if [ "$GITHUB_ID" != "$PR_AUTHOR" ]; then
              # Append the corresponding Slack ID to the mentions string
              SLACK_ID=$(echo $MENTIONS_JSON | jq -r ".[\"$GITHUB_ID\"]")
              OTHER_MENTIONS_SLACK_IDS+="<@$SLACK_ID>, "
            fi
          done
          
          # Remove the trailing comma and space from the mentions string
          OTHER_MENTIONS_SLACK_IDS=$(echo $OTHER_MENTIONS_SLACK_IDS | sed 's/, $//')
          
          # Construct the message payload with dynamic mentions
          MESSAGE="{\"text\": \"New PR from <@$PR_AUTHOR_SLACK_ID> needs review: ${{ github.event.pull_request.html_url }} CC: $OTHER_MENTIONS_SLACK_IDS\"}"
          echo "::set-output name=message::$MESSAGE"
        env:
          SLACK_MENTIONS: '{"kiyochinh": "U02ASTKAKSR", "member2": "U02ASTKAKSR", "member3": "U02ASTKAKSR"}'
        shell: bash

      - name: Send PR notification to Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'C02QVRXK30C'
          payload: ${{ steps.pr_notification.outputs.message }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - uses: subosito/flutter-action@v2

      - name: Get flutter dependencies
        run: flutter pub get

      - name: Check for any formatting issues in the code
        run: dart format --set-exit-if-changed .

      - name: Statically analyze the Dart code for any errors
        run: dart analyze

      - name: Run Tests
        run: flutter test