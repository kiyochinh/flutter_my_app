lane :bump_version do |options|
  # Pseudo-code to extract the current version and build number
  # You'll need to implement this based on your project's specifics
  current_version, current_build = get_current_version_and_build_from_pubspec()

  # Reset build number to 0 if bumping major, minor, or patch
  if ['major', 'minor', 'patch'].include?(options[:bump])
    new_build = 0
    # Modify the bump option to include resetting build number to 0
    # This assumes your flutter_bump_version action can handle such an input
    options[:bump] += ",build:0"
  else
    new_build = current_build # Or however you handle bumping the build number
  end

  result = flutter_bump_version(
    bump_build: options[:bump_build],
    parts: options[:bump],
    pubspec: "./pubspec.yaml"
  )
  if(options[:push] || options[:bump])
    sh "git config --global user.email kiyochinh@gmail.com"
    sh "git config --global user.name Kiyo Chinh"
    sh "git config --global push.followTags true"
    sh "git add ../pubspec.yaml"
    sh 'git commit -m "[Chore] Bump version from '+result[:previous]+ ' to ' + result[:new] + '"'
    sh 'git tag -a v'+result[:new]+' -m "Version '+result[:new]+'"'
    sh 'git pull --rebase origin '+options[:branch]
    sh "git push origin HEAD:"+options[:branch]
  end
end